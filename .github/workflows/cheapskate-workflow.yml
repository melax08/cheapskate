name: cheapskate workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup Poetry
        uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: "1.5.1"

      - name: Install dependencies
        run: |
          poetry install

      - name: Test with flake8
        run: |
          poetry run flake8 .

      - name: Test with isort
        run: |
          poetry run isort . --check --diff

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}

          script: |
            cd cheapskate
            git pull
             echo "${{ secrets.SUDO_PASS }}" | sudo -S docker compose rm -sf cheapskate_bot cheapskate_api
             echo "${{ secrets.SUDO_PASS }}" | sudo -S docker image rm cheapskate-cheapskate_bot cheapskate-cheapskate_api
            cat <<EOF > src/.env
            # File generated by github actions workflow and will be recreated on new git push
            # Logging settings
            # Name of log directory
            LOG_DIR=logs
            # Level of logging. Available options: DEBUG, INFO, WARNING, ERROR, CRITICAL
            LOG_LEVEL=INFO
            
            # Telegram bot settings
            # Bot token, you can get it from telegram bot @botfather, when you creating a new bot.
            TOKEN=${{ secrets.BOT_TG_TOKEN }}
            ALLOWED_TELEGRAM_IDS=${{ secrets.ALLOWED_TELEGRAM_IDS }}
            ECHO_MESSAGES=1
            
            # API Settings
            API_APP_TITLE=Cheapskate
            API_APP_DESCRIPTION=<Application for financial control>
            API_DATABASE_URL=postgresql+asyncpg://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
            API_SECRET=${{ secrets.API_SECRET }}
            API_MONTH_BUDGET=${{ secrets.MONTH_BUDGET }}
            
            HOST_API=${{ secrets.HOST_API }}
            
            # PostgreSQL settings
            DB_NAME=${{ secrets.DB_NAME }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            # DONE WORKFLOW ENVS
            EOF
             echo "${{ secrets.SUDO_PASS }}" | sudo -S docker compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.SEND_MESSAGE_TO_ID }}
          token: ${{ secrets.SEND_MESSAGE_TG_TOKEN }}
          message: ${{ github.workflow }} успешно выполнен!