name: cheapskate workflow

on: [push]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13.2"

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install dependencies
        run: |
          uv sync --frozen

      - name: Test with ruff linter
        run: |
          uv run ruff check .

      - name: Test with pytest
        run: |
          uv run pytest .

  deploy:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}

          script: |
            cd cheapskate
            git pull
            cat <<EOF > src/.env
            # File generated by github actions workflow and will be recreated on new git push
            # Logging settings
            # Name of log directory
            LOG_DIR=logs
            # Level of logging. Available options: DEBUG, INFO, WARNING, ERROR, CRITICAL
            LOG_LEVEL=INFO

            # Telegram bot settings
            # Bot token, you can get it from telegram bot @botfather, when you creating a new bot.
            BOT_TELEGRAM_TOKEN=${{ secrets.BOT_TG_TOKEN }}
            ALLOWED_TELEGRAM_IDS=${{ secrets.ALLOWED_TELEGRAM_IDS }}
            ECHO_MESSAGES=1

            # API Settings
            APP_TITLE=Cheapskate
            APP_DESCRIPTION=<Application for financial control>

            HOST_API=${{ secrets.HOST_API }}

            # PostgreSQL settings
            DB_NAME=${{ secrets.DB_NAME }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}

            # Redis settings
            REDIS_HOST=cheapskate_redis
            REDIS_PORT=6379
            REDIS_DB=0

            # Google API credentials
            REPORT_SPREADSHEET_ID=${{ secrets.REPORT_SPREADSHEET_ID }}
            GOOGLE_SERVICE_ACCOUNT_CREDS='${{ secrets.GOOGLE_SERVICE_ACCOUNT_CREDS }}'
            # DONE WORKFLOW ENVS
            EOF
             echo "${{ secrets.SUDO_PASS }}" | sudo -S docker compose -f infra/docker-compose-prod.yml up -d --build

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.SEND_MESSAGE_TO_ID }}
          token: ${{ secrets.SEND_MESSAGE_TG_TOKEN }}
          message: ðŸ’¸ ${{ github.workflow }} successfully completed!
